$theme-flex: (
  initial: 0 1 auto,
  1: 1 1 0%,
  auto: auto,
  none: none,
) !default;

@mixin flex($prefix, $maps: $theme-flex) {
  @each $unit, $value in $maps {
    .#{$prefix}flex-#{$unit} {
      flex: $value;
    }
  }
}

@mixin flex-direction($prefix) {
  $maps: (
    row: row,
    row-reverse: row-reverse,
    col: column,
    col-reverse: column-reverse,
  );

  @each $unit, $value in $maps {
    .#{$prefix}flex-#{$unit} {
      flex-direction: $value;
    }
  }
}

@mixin flex-wrap($prefix) {
  $maps: (
    no-wrap: nowrap,
    wrap: wrap,
    wrap-reverse: wrap-reverse,
  );

  @each $unit, $value in $maps {
    .#{$prefix}flex-#{$unit} {
      flex-wrap: $value;
    }
  }
}

$theme-flex-grow: (
  0: 0,
  default: 1,
) !default;

@mixin flex-grow($prefix, $maps: $theme-flex-grow) {
  @each $unit, $value in $maps {
    @if $unit == default {
      .#{$prefix}flex-grow {
        flex-grow: $value
      }
    }
    @else {
      .#{$prefix}flex-grow-#{$unit} {
        flex-grow: $value;
      }
    }
  }
}

$theme-flex-grow: (
  0: 0,
  default: 1,
) !default;

@mixin flex-shrink($prefix, $maps: $theme-flex-grow) {
  @each $unit, $value in $maps {
    @if $unit == default {
      .#{$prefix}flex-shrink {
        flex-shrink: $value
      }
    }
    @else {
      .#{$prefix}flex-shrink-#{$unit} {
        flex-shrink: $value;
      }
    }
  }
}
